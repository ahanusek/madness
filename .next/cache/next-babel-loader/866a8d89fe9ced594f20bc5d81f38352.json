{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Documents/react kurs/madness/components/Slider/SimpleSwiper.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Swiper from \"react-id-swiper\";\nimport Slide from \"./Slide\";\nimport { useEffect, useState, useCallback } from \"react\";\n\nvar SimpleSwiper = function SimpleSwiper() {\n  _s();\n\n  var _useState = useState(null),\n      swiper = _useState[0],\n      setSwiper = _useState[1];\n\n  var goNext = function goNext() {\n    if (swiper !== null) {\n      swiper.slideNext();\n    }\n  };\n\n  var goPrev = function goPrev() {\n    if (swiper !== null) {\n      swiper.slidePrev();\n    }\n  };\n\n  var items = [{\n    content: \"Slide1\",\n    idx: 1\n  }, {\n    content: \"Slide2\",\n    idx: 2\n  }, {\n    content: \"Slide3\",\n    idx: 3\n  }, {\n    content: \"Slide4\",\n    idx: 4\n  }, {\n    content: \"Slide5\",\n    idx: 5\n  }, {\n    content: \"Slide6\",\n    idx: 6\n  }];\n  var renderItem = useCallback(function (_ref) {\n    var idx = _ref.idx,\n        content = _ref.content;\n    return /*#__PURE__*/_jsxDEV(Slide, {\n      content: content\n    }, \"slide_\".concat(idx), false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, _this);\n  }, []);\n  useEffect(function () {\n    var timeout;\n\n    if (swiper !== null) {\n      console.log(swiper);\n      timeout = setTimeout(function () {\n        swiper.update();\n      }, 1000);\n    }\n\n    return function cleanup() {\n      if (swiper !== null) {\n        clearTimeout(timeout);\n        swiper.destroy();\n        console.log(\"Swiper destroied\");\n      }\n    };\n  }, [swiper]); // Add eventlisteners for swiper after initializing\n\n  var params = {\n    slidesPerView: 3,\n    centeredSlides: true,\n    spaceBetween: 30,\n    loop: true,\n    getSwiper: setSwiper\n  };\n  var slides = items.map(renderItem); // Try to replace {slides} with <div>Slide1</div> <div>Slide2</div> <div>Slide3</div> ...\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Swiper, _objectSpread(_objectSpread({}, params), {}, {\n      children: slides\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goPrev,\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(SimpleSwiper, \"C3vmZJcAHYeVa6nmQyD+zwegeno=\");\n\n_c = SimpleSwiper;\nexport default SimpleSwiper;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleSwiper\");","map":{"version":3,"sources":["/Users/apple/Documents/react kurs/madness/components/Slider/SimpleSwiper.js"],"names":["Swiper","Slide","useEffect","useState","useCallback","SimpleSwiper","swiper","setSwiper","goNext","slideNext","goPrev","slidePrev","items","content","idx","renderItem","timeout","console","log","setTimeout","update","cleanup","clearTimeout","destroy","params","slidesPerView","centeredSlides","spaceBetween","loop","getSwiper","slides","map"],"mappings":"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","sourcesContent":["import Swiper from \"react-id-swiper\";\nimport Slide from \"./Slide\";\n\nimport { useEffect, useState, useCallback } from \"react\";\n\nconst SimpleSwiper = () => {\n  const [swiper, setSwiper] = useState(null);\n\n  const goNext = () => {\n    if (swiper !== null) {\n      swiper.slideNext();\n    }\n  };\n\n  const goPrev = () => {\n    if (swiper !== null) {\n      swiper.slidePrev();\n    }\n  };\n\n  const items = [\n    {\n      content: \"Slide1\",\n      idx: 1,\n    },\n    {\n      content: \"Slide2\",\n      idx: 2,\n    },\n    {\n      content: \"Slide3\",\n      idx: 3,\n    },\n    {\n      content: \"Slide4\",\n      idx: 4,\n    },\n    {\n      content: \"Slide5\",\n      idx: 5,\n    },\n    {\n      content: \"Slide6\",\n      idx: 6,\n    },\n  ];\n\n  const renderItem = useCallback(\n    ({ idx, content }) => <Slide content={content} key={`slide_${idx}`} />,\n    []\n  );\n\n  useEffect(() => {\n    let timeout;\n    if (swiper !== null) {\n      console.log(swiper);\n      timeout = setTimeout(() => {\n        swiper.update();\n      }, 1000);\n    }\n\n    return function cleanup() {\n      if (swiper !== null) {\n        clearTimeout(timeout);\n        swiper.destroy();\n        console.log(\"Swiper destroied\");\n      }\n    };\n  }, [swiper]);\n\n  // Add eventlisteners for swiper after initializing\n\n  const params = {\n    slidesPerView: 3,\n    centeredSlides: true,\n    spaceBetween: 30,\n    loop: true,\n    getSwiper: setSwiper,\n  };\n\n  const slides = items.map(renderItem);\n  // Try to replace {slides} with <div>Slide1</div> <div>Slide2</div> <div>Slide3</div> ...\n  return (\n    <>\n      <Swiper {...params}>{slides}</Swiper>\n      <button onClick={goPrev}>Prev</button>\n      <button onClick={goNext}>Next</button>\n    </>\n  );\n};\n\nexport default SimpleSwiper;\n"]},"metadata":{},"sourceType":"module"}