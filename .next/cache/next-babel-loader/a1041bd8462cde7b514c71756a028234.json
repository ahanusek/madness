{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Documents/react kurs/madness/pages/test/slider.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { Button, Flex, Text } from \"@react-yuki/ui\";\nimport Swiper from \"react-id-swiper\";\nimport SlideItem from \"./slideItem\";\nexport var SlideContainer = function SlideContainer(props) {\n  return /*#__PURE__*/_jsxDEV(Flex, _objectSpread(_objectSpread({}, props), {}, {\n    __css: {\n      position: \"relative\",\n      \".swiper-container\": {\n        width: \"100%\",\n        height: \"20rem\"\n      }\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, _this);\n};\n_c = SlideContainer;\nexport default _s(function (_ref) {\n  _s();\n\n  var items = _ref.items;\n  // Swiper instance\n  var swiperRef = useRef(null); // Slides current index\n\n  var _useState = useState(0),\n      currentIndex = _useState[0],\n      updateCurrentIndex = _useState[1]; // Params definition\n\n\n  var params = {\n    initialSlide: 3,\n    pagination: {\n      el: \".swiper-pagination\",\n      type: \"bullets\",\n      clickable: true\n    },\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\"\n    },\n    spaceBetween: 30,\n    loop: true,\n    autoplay: true\n  }; // Manipulate swiper from outside\n\n  var goNext = function goNext() {\n    if (swiperRef.current && swiperRef.current.swiper) {\n      swiperRef.current.swiper.slideNext();\n    }\n  };\n\n  var goPrev = function goPrev() {\n    if (swiperRef.current && swiperRef.current.swiper) {\n      swiperRef.current.swiper.slidePrev();\n    }\n  };\n\n  var renderItem = useCallback(function (_ref2) {\n    var idx = _ref2.idx,\n        color = _ref2.color,\n        content = _ref2.content;\n    return /*#__PURE__*/_jsxDEV(SlideItem, {\n      color: color,\n      content: content\n    }, \"slide_\".concat(idx), false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this);\n  }, []);\n  var updateIndex = useCallback(function () {\n    return updateCurrentIndex(swiperRef.current.swiper.realIndex);\n  }, []); // Add eventlisteners for swiper after initializing\n\n  useEffect(function () {\n    var swiperInstance = swiperRef.current.swiper;\n\n    if (swiperInstance) {\n      swiperInstance.on(\"slideChange\", updateIndex);\n    }\n\n    return function () {\n      if (swiperInstance) {\n        swiperInstance.off(\"slideChange\", updateIndex);\n      }\n    };\n  }, [updateIndex]);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(SlideContainer, {\n      children: /*#__PURE__*/_jsxDEV(Swiper, _objectSpread(_objectSpread({}, params), {}, {\n        ref: swiperRef,\n        children: items.map(renderItem)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n      my: 5,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: goPrev,\n        mr: 4,\n        bg: \"green.2\",\n        color: \"white\",\n        border: 0,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: goNext,\n        bg: \"red.4\",\n        border: 0,\n        color: \"white\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Text, {\n      textAlign: \"center\",\n      width: 1,\n      fontSize: 4,\n      children: [\"Current slide index is\", \" \", /*#__PURE__*/_jsxDEV(Text, {\n        as: \"strong\",\n        fontWeight: 3,\n        color: \"green.4\",\n        fontSize: 4,\n        children: currentIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, _this);\n}, \"uNiXn58ImLObClxPZLcs0tW+7VE=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideContainer\");","map":{"version":3,"sources":["/Users/apple/Documents/react kurs/madness/pages/test/slider.js"],"names":["React","useState","useEffect","useCallback","useRef","Button","Flex","Text","Swiper","SlideItem","SlideContainer","props","position","width","height","items","swiperRef","currentIndex","updateCurrentIndex","params","initialSlide","pagination","el","type","clickable","navigation","nextEl","prevEl","spaceBetween","loop","autoplay","goNext","current","swiper","slideNext","goPrev","slidePrev","renderItem","idx","color","content","updateIndex","realIndex","swiperInstance","on","off","map"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,gBAAnC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;AAAA,sBAC5B,QAAC,IAAD,kCACMA,KADN;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,UADL;AAEL,2BAAqB;AACnBC,QAAAA,KAAK,EAAE,MADY;AAEnBC,QAAAA,MAAM,EAAE;AAFW;AAFhB;AAFT;AAAA;AAAA;AAAA;AAAA,WAD4B;AAAA,CAAvB;KAAMJ,c;AAab,kBAAe,gBAAe;AAAA;;AAAA,MAAZK,KAAY,QAAZA,KAAY;AAC5B;AACA,MAAMC,SAAS,GAAGZ,MAAM,CAAC,IAAD,CAAxB,CAF4B,CAI5B;;AAJ4B,kBAKeH,QAAQ,CAAC,CAAD,CALvB;AAAA,MAKrBgB,YALqB;AAAA,MAKPC,kBALO,iBAM5B;;;AACA,MAAMC,MAAM,GAAG;AACbC,IAAAA,YAAY,EAAE,CADD;AAEbC,IAAAA,UAAU,EAAE;AACVC,MAAAA,EAAE,EAAE,oBADM;AAEVC,MAAAA,IAAI,EAAE,SAFI;AAGVC,MAAAA,SAAS,EAAE;AAHD,KAFC;AAObC,IAAAA,UAAU,EAAE;AACVC,MAAAA,MAAM,EAAE,qBADE;AAEVC,MAAAA,MAAM,EAAE;AAFE,KAPC;AAWbC,IAAAA,YAAY,EAAE,EAXD;AAYbC,IAAAA,IAAI,EAAE,IAZO;AAabC,IAAAA,QAAQ,EAAE;AAbG,GAAf,CAP4B,CAuB5B;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAIf,SAAS,CAACgB,OAAV,IAAqBhB,SAAS,CAACgB,OAAV,CAAkBC,MAA3C,EAAmD;AACjDjB,MAAAA,SAAS,CAACgB,OAAV,CAAkBC,MAAlB,CAAyBC,SAAzB;AACD;AACF,GAJD;;AAMA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAInB,SAAS,CAACgB,OAAV,IAAqBhB,SAAS,CAACgB,OAAV,CAAkBC,MAA3C,EAAmD;AACjDjB,MAAAA,SAAS,CAACgB,OAAV,CAAkBC,MAAlB,CAAyBG,SAAzB;AACD;AACF,GAJD;;AAMA,MAAMC,UAAU,GAAGlC,WAAW,CAC5B;AAAA,QAAGmC,GAAH,SAAGA,GAAH;AAAA,QAAQC,KAAR,SAAQA,KAAR;AAAA,QAAeC,OAAf,SAAeA,OAAf;AAAA,wBACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAED,KAAlB;AAAyB,MAAA,OAAO,EAAEC;AAAlC,uBAAyDF,GAAzD;AAAA;AAAA;AAAA;AAAA,aADF;AAAA,GAD4B,EAI5B,EAJ4B,CAA9B;AAOA,MAAMG,WAAW,GAAGtC,WAAW,CAC7B;AAAA,WAAMe,kBAAkB,CAACF,SAAS,CAACgB,OAAV,CAAkBC,MAAlB,CAAyBS,SAA1B,CAAxB;AAAA,GAD6B,EAE7B,EAF6B,CAA/B,CA3C4B,CAgD5B;;AACAxC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMyC,cAAc,GAAG3B,SAAS,CAACgB,OAAV,CAAkBC,MAAzC;;AAEA,QAAIU,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,CAACC,EAAf,CAAkB,aAAlB,EAAiCH,WAAjC;AACD;;AAED,WAAO,YAAM;AACX,UAAIE,cAAJ,EAAoB;AAClBA,QAAAA,cAAc,CAACE,GAAf,CAAmB,aAAnB,EAAkCJ,WAAlC;AACD;AACF,KAJD;AAKD,GAZQ,EAYN,CAACA,WAAD,CAZM,CAAT;AAcA,sBACE,QAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAAA,4BACE,QAAC,cAAD;AAAA,6BACE,QAAC,MAAD,kCAAYtB,MAAZ;AAAoB,QAAA,GAAG,EAAEH,SAAzB;AAAA,kBACGD,KAAK,CAAC+B,GAAN,CAAUT,UAAV;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAME,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAa,MAAA,cAAc,EAAC,QAA5B;AAAqC,MAAA,UAAU,EAAC,QAAhD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEF,MAAjB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAC,SAAnC;AAA6C,QAAA,KAAK,EAAC,OAAnD;AAA2D,QAAA,MAAM,EAAE,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEJ,MAAjB;AAAyB,QAAA,EAAE,EAAC,OAA5B;AAAoC,QAAA,MAAM,EAAE,CAA5C;AAA+C,QAAA,KAAK,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,eAcE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE,CAAhC;AAAmC,MAAA,QAAQ,EAAE,CAA7C;AAAA,2CACyB,GADzB,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,UAAU,EAAE,CAA9B;AAAiC,QAAA,KAAK,EAAC,SAAvC;AAAiD,QAAA,QAAQ,EAAE,CAA3D;AAAA,kBACGd;AADH;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAuBD,CAtFD","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { Button, Flex, Text } from \"@react-yuki/ui\";\nimport Swiper from \"react-id-swiper\";\nimport SlideItem from \"./slideItem\";\n\nexport const SlideContainer = (props) => (\n  <Flex\n    {...props}\n    __css={{\n      position: \"relative\",\n      \".swiper-container\": {\n        width: \"100%\",\n        height: \"20rem\",\n      },\n    }}\n  />\n);\n\nexport default ({ items }) => {\n  // Swiper instance\n  const swiperRef = useRef(null);\n\n  // Slides current index\n  const [currentIndex, updateCurrentIndex] = useState(0);\n  // Params definition\n  const params = {\n    initialSlide: 3,\n    pagination: {\n      el: \".swiper-pagination\",\n      type: \"bullets\",\n      clickable: true,\n    },\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    spaceBetween: 30,\n    loop: true,\n    autoplay: true,\n  };\n\n  // Manipulate swiper from outside\n  const goNext = () => {\n    if (swiperRef.current && swiperRef.current.swiper) {\n      swiperRef.current.swiper.slideNext();\n    }\n  };\n\n  const goPrev = () => {\n    if (swiperRef.current && swiperRef.current.swiper) {\n      swiperRef.current.swiper.slidePrev();\n    }\n  };\n\n  const renderItem = useCallback(\n    ({ idx, color, content }) => (\n      <SlideItem color={color} content={content} key={`slide_${idx}`} />\n    ),\n    []\n  );\n\n  const updateIndex = useCallback(\n    () => updateCurrentIndex(swiperRef.current.swiper.realIndex),\n    []\n  );\n\n  // Add eventlisteners for swiper after initializing\n  useEffect(() => {\n    const swiperInstance = swiperRef.current.swiper;\n\n    if (swiperInstance) {\n      swiperInstance.on(\"slideChange\", updateIndex);\n    }\n\n    return () => {\n      if (swiperInstance) {\n        swiperInstance.off(\"slideChange\", updateIndex);\n      }\n    };\n  }, [updateIndex]);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <SlideContainer>\n        <Swiper {...params} ref={swiperRef}>\n          {items.map(renderItem)}\n        </Swiper>\n      </SlideContainer>\n      <Flex my={5} justifyContent=\"center\" alignItems=\"center\">\n        <Button onClick={goPrev} mr={4} bg=\"green.2\" color=\"white\" border={0}>\n          Prev\n        </Button>\n        <Button onClick={goNext} bg=\"red.4\" border={0} color=\"white\">\n          Next\n        </Button>\n      </Flex>\n      <Text textAlign=\"center\" width={1} fontSize={4}>\n        Current slide index is{\" \"}\n        <Text as=\"strong\" fontWeight={3} color=\"green.4\" fontSize={4}>\n          {currentIndex}\n        </Text>\n      </Text>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}